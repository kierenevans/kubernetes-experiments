$ kubectl get ingress --all-namespaces
NAMESPACE                                                         NAME                       HOSTS     ADDRESS          PORTS     AGE
b8dcf63a-0811-11e7-ad93-0a580a8403bb-feature-add-ing-142005e4fb   https                      *         35.186.252.117   80, 443   48m
b8dcf63a-0811-11e7-ad93-0a580a8403bb-feature-add-ingress          https                      *         104.199.45.112   80, 443   6h
continuous-pipe-system                                            nginx-ingress-controller   *         107.178.251.68   80, 443   1h

# INGRESS="$(kubectl get ingress --all-namespaces -o jsonpath='{range .items[*]}{.metadata.namespace}{"\t"}{.metadata.name}{"\t"}{.metadata.annotations}{"\n"}{end}' | grep -v kubernetes.io/ingress.class)"
# if [ -n "$INGRESS" ]; then echo $INGRESS | cut -f1,2 | awk '{print "kubectl --namespace=",$1,"annotate ingress",$2,"kubernetes.io/ingress.class=gce"}'; fi

Run the annotate step:
INGRESS="$(kubectl get ingress --all-namespaces -o jsonpath='{range .items[*]}{.metadata.namespace}{"\t"}{.metadata.name}{"\t"}{.metadata.annotations}{"\n"}{end}' | grep -v kubernetes.io/ingress.class)"
if [ -n "$INGRESS" ]; then echo $INGRESS | cut -f1,2 | awk '{print "kubectl --namespace="$1" annotate ingress "$2" kubernetes.io/ingress.class=gce"}'; fi


1. `hem ops generate-self-signed-cert nginx-proxy-test.example` | tee cert > key
2. base64 cert
3. base64 key
4. update nginx-ingress/ingress-controller/ssl-cert.yml with values
5.
```
$ kubectl create ns continuous-pipe-system
namespace "continuous-pipe-system" created
$ kubectl --namespace=continuous-pipe-system create -f nginx-ingress/default-backend/service.yml
service "default-http-backend" created
$ kubectl --namespace=continuous-pipe-system create -f nginx-ingress/default-backend/deployment.yml
deployment "default-http-backend" created
$ kubectl --namespace=continuous-pipe-system create -f nginx-ingress/ingress-controller/ssl-cert.yml
secret "nginx-ingress-controller-selfsigned" created
$ kubectl --namespace=continuous-pipe-system create -f nginx-ingress/ingress-controller/service.yml
service "nginx-ingress-controller" created
$ kubectl --namespace=continuous-pipe-system create -f nginx-ingress/ingress-controller/gke-ingress.yml
ingress "nginx-ingress-controller" created
$ kubectl --namespace=continuous-pipe-system create -f nginx-ingress/ingress-controller/deployment.yml
deployment "nginx-ingress-controller" created
```


```
kubectl create ns feature-add-ingress-manual
kubectl --namespace=feature-add-ingress-manual create -f nginx-ingress/demo-app/deployment.yml
kubectl --namespace=feature-add-ingress-manual create -f nginx-ingress/demo-app/service.yml
kubectl --namespace=feature-add-ingress-manual create -f nginx-ingress/demo-app/ingress.yml
```
